@{
    ViewData["Title"] = "Register";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="register-container">
                <div class="register-header text-center mb-5">
                    <h1 class="text-gradient">JOIN TOURNAMENT PRO</h1>
                    <p class="tagline">Ready to compete? Create your account</p>
                </div>

                <div class="register-box">
                    <div class="register-form">
                        <h2 class="section-title">PLAYER REGISTRATION</h2>
                        <form asp-controller="Auth" asp-action="Register" method="post">
                            <div class="form-group mb-4">
                                <label class="form-label">Gamer Tag</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-gamepad"></i></span>
                                    <input type="text" name="username" class="form-control" placeholder="Enter your unique gamer tag" required />
                                </div>
                            </div>
                            <div class="form-group mb-4">
                                <label class="form-label">Email</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                    <input type="email" name="email" class="form-control" placeholder="Enter your email" required />
                                </div>
                            </div>
                            <div class="form-group mb-4">
                                <label class="form-label">Password</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                    <input type="password" name="password" class="form-control" placeholder="Create a strong password" required />
                                </div>
                                <div class="password-strength mt-2">
                                    <div class="strength-bar"></div>
                                    <small class="text-muted">Password strength: <span id="strength-text">Weak</span></small>
                                </div>
                            </div>
                            <div class="form-group mb-4">
                                <label class="form-label">Confirm Password</label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                    <input type="password" name="confirmPassword" class="form-control" placeholder="Confirm your password" required />
                                </div>
                            </div>
                            <div class="form-check mb-4">
                                <input class="form-check-input" type="checkbox" id="termsCheck" required>
                                <label class="form-check-label" for="termsCheck">
                                    I agree to the <a href="#" class="text-primary">Terms of Service</a> and <a href="#" class="text-primary">Privacy Policy</a>
                                </label>
                            </div>
                            <button type="submit" class="btn btn-primary btn-lg w-100 mb-3">
                                <span>CREATE ACCOUNT</span>
                                <i class="fas fa-user-plus ms-2"></i>
                            </button>
                            <div class="text-center">
                                <span class="text-muted">Already have an account?</span>
                                <a asp-controller="Auth" asp-action="Login" class="ms-2 text-primary">Sign In</a>
                            </div>
                        </form>
                    </div>
                </div>

                @if (ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="error-messages mt-4">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <div class="alert alert-danger d-flex align-items-center">
                                <i class="fas fa-exclamation-circle me-2"></i>
                                @error.ErrorMessage
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .register-container {
            padding: 2rem 0;
        }

        .register-header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-transform: uppercase;
        }

        .text-gradient {
            background: linear-gradient(to right, var(--bs-primary), var(--highlight));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .tagline {
            font-size: 1.2rem;
            color: var(--bs-gray-400);
            letter-spacing: 1px;
        }

        .register-box {
            background: rgba(15, 25, 35, 0.9);
            border: 1px solid var(--accent);
            border-radius: 8px;
            padding: 2rem;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
        }

        .section-title {
            color: var(--bs-primary);
            text-transform: uppercase;
            text-align: center;
            margin-bottom: 2rem;
            font-weight: 600;
        }

        .form-label {
            text-transform: uppercase;
            font-size: 0.9rem;
            letter-spacing: 1px;
            margin-bottom: 0.5rem;
            color: var(--bs-gray-300);
        }

        .form-control {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--accent);
            color: var(--bs-light);
            padding: 0.75rem 1rem;
        }

            .form-control:focus {
                background-color: rgba(255, 255, 255, 0.15);
                border-color: var(--bs-primary);
                box-shadow: 0 0 0 0.25rem rgba(255, 70, 85, 0.25);
                color: var(--bs-light);
            }

        .input-group-text {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--accent);
            color: var(--bs-primary);
        }

        .password-strength {
            width: 100%;
        }

        .strength-bar {
            height: 4px;
            width: 0%;
            background: #ff4655;
            transition: width 0.3s, background 0.3s;
            margin-bottom: 0.25rem;
            border-radius: 2px;
        }

        .form-check-label {
            color: var(--bs-gray-400);
        }

        .form-check-input {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--accent);
        }

            .form-check-input:checked {
                background-color: var(--bs-primary);
                border-color: var(--bs-primary);
            }

        @@media (max-width: 768px) {
            .register-header h1 {
                font-size: 2rem;
            }

            .register-box {
                padding: 1.5rem;
            }
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.querySelector('input[name="password"]');
            const strengthBar = document.querySelector('.strength-bar');
            const strengthText = document.getElementById('strength-text');

            passwordInput.addEventListener('input', function() {
                const password = this.value;
                const strength = calculatePasswordStrength(password);

                strengthBar.style.width = strength.percentage + '%';
                strengthBar.style.background = strength.color;
                strengthText.textContent = strength.text;
                strengthText.style.color = strength.color;
            });

            function calculatePasswordStrength(password) {
                let strength = 0;
                if (password.length > 0) strength += 10;
                if (password.length >= 8) strength += 30;
                if (/[A-Z]/.test(password)) strength += 15;
                if (/[0-9]/.test(password)) strength += 15;
                if (/[^A-Za-z0-9]/.test(password)) strength += 30;

                strength = Math.min(strength, 100);

                if (strength < 30) {
                    return { percentage: strength, color: '#ff4655', text: 'Weak' };
                } else if (strength < 70) {
                    return { percentage: strength, color: '#ff8a00', text: 'Medium' };
                } else {
                    return { percentage: strength, color: '#2ecc71', text: 'Strong' };
                }
            }
        });
    </script>
}
@model Tournament
@using Esportify.Models
@using System.Security.Claims
@{
    ViewData["Title"] = Model.Name;
    var isAdmin = User.IsInRole("Admin");
    var isRegistered = ViewBag.IsRegistered as bool? ?? false;
    var userTeams = ViewBag.UserTeams as List<Team> ?? new List<Team>();
}

@section Styles {
    <style>
        /* Tournament Hero */
        .tournament-hero {
            padding: 5rem 0 3rem;
            text-align: center;
            border-bottom: 1px solid rgba(0, 255, 136, 0.2);
            margin-bottom: 2rem;
        }

        .hero-title {
            font-family: 'Oxanium', sans-serif;
            font-weight: 800;
            font-size: 3rem;
            margin-bottom: 1rem;
            color: white;
        }

        .tournament-badge {
            display: inline-block;
            background: var(--green);
            color: var(--black);
            padding: 0.5rem 1.5rem;
            border-radius: 50px;
            font-weight: 700;
            font-size: 0.9rem;
            margin-bottom: 1rem;
            text-transform: uppercase;
        }

        .tournament-status {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 1rem;
            color: #b3b3b3;
        }

        /* Tournament Cards */
        .tournament-card {
            background: rgba(26, 26, 26, 0.8);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 1.5rem;
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

            .card-header h2 {
                font-size: 1.5rem;
                margin: 0;
                color: var(--green);
            }

        .card-body {
            padding: 1.5rem;
        }

        .tournament-description {
            margin-bottom: 2rem;
        }

            .tournament-description h3 {
                font-size: 1.25rem;
                margin-bottom: 1rem;
                color: white;
            }

            .tournament-description p {
                color: #b3b3b3;
                line-height: 1.6;
            }

        /* Info Grid */
        .tournament-info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .info-item {
            display: flex;
            align-items: flex-start;
            gap: 1rem;
        }

            .info-item i {
                font-size: 1.25rem;
                color: var(--green);
                margin-top: 0.25rem;
            }

            .info-item h4 {
                font-size: 1rem;
                margin-bottom: 0.25rem;
                color: white;
            }

            .info-item p {
                margin: 0;
                color: #b3b3b3;
            }

        /* Teams Grid */
        .teams-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 1rem;
        }

        .team-card {
            background: rgba(40, 40, 40, 0.6);
            border: 1px solid rgba(255, 255, 255, 0.05);
            border-radius: 6px;
            padding: 1rem;
            transition: all 0.3s ease;
        }

            .team-card:hover {
                border-color: var(--green);
                transform: translateY(-3px);
            }

        .team-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.75rem;
        }

            .team-header h3 {
                font-size: 1rem;
                margin: 0;
                color: white;
            }

        .members-count {
            font-size: 0.8rem;
            color: #b3b3b3;
        }

        .team-members {
            display: flex;
            gap: 0.5rem;
            margin-bottom: 0.75rem;
        }

        .member-avatar {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: 2px solid var(--green);
        }

        .more-members {
            font-size: 0.8rem;
            color: #b3b3b3;
            align-self: center;
        }

        .team-footer {
            font-size: 0.8rem;
            color: #666;
        }

        /* Sidebar Cards */
        .sidebar-card {
            background: rgba(26, 26, 26, 0.8);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

            .sidebar-card h3 {
                font-size: 1.25rem;
                margin-bottom: 1.25rem;
                color: var(--green);
                border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                padding-bottom: 0.75rem;
            }

        /* Registration Form */
        .btn-register {
            background: var(--green);
            color: var(--black);
            font-weight: 600;
            margin-top: 1rem;
        }

        .registration-meta {
            margin-top: 1.5rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding-top: 1rem;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
            color: #b3b3b3;
        }

            .meta-item i {
                color: var(--green);
                width: 20px;
                text-align: center;
            }

        /* Rules List */
        .rules-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

            .rules-list li {
                position: relative;
                padding-left: 1.5rem;
                margin-bottom: 0.75rem;
                color: #b3b3b3;
            }

                .rules-list li:before {
                    content: "•";
                    color: var(--green);
                    position: absolute;
                    left: 0;
                }

        /* Prize Distribution */
        .prize-distribution {
            margin-top: 1rem;
        }

        .prize-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

            .prize-item:last-child {
                border-bottom: none;
            }

        .position {
            font-weight: 600;
            color: white;
        }

        .prize-amount {
            color: var(--green);
            font-weight: 600;
        }

        /* Admin Actions */
        .admin-actions {
            display: flex;
            gap: 0.5rem;
        }

        .btn-edit {
            background: rgba(13, 110, 253, 0.2);
            color: #0d6efd;
            border-color: #0d6efd;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 2rem 0;
            color: #666;
        }

            .empty-state i {
                font-size: 2rem;
                margin-bottom: 1rem;
                opacity: 0.5;
            }

            .empty-state p {
                margin-bottom: 1.5rem;
            }

        /* Responsive Adjustments */
        @@media (max-width: 992px) {
            .hero-title {
                font-size: 2.5rem;
            }

            .tournament-info-grid {
                grid-template-columns: 1fr 1fr;
            }
        }

        @@media (max-width: 768px) {
            .hero-title {
                font-size: 2rem;
            }

            .tournament-info-grid {
                grid-template-columns: 1fr;
            }

            .teams-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
}

<!-- Hero Section -->
<section class="tournament-hero" style="background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('@Model.ImageUrl') no-repeat center center; background-size: cover;">
    <div class="container">
        <div class="hero-content">
            <div class="tournament-badge">@Model.Game.Name</div>
            <h1 class="hero-title">@Model.Name</h1>
            <div class="tournament-status">
                @if (Model.StartDate > DateTime.Now)
                {
                    <span class="badge bg-success">Inscrições Abertas</span>
                    <span>Começa em @((Model.StartDate - DateTime.Now).Days) dias</span>
                }
                else if (Model.EndDate > DateTime.Now)
                {
                    <span class="badge bg-warning">A Decorrer</span>
                    <span>Termina em @((Model.EndDate - DateTime.Now).Days) dias</span>
                }
                else
                {
                    <span class="badge bg-secondary">Concluído</span>
                }
            </div>
        </div>
    </div>
</section>

<!-- Main Content -->
<div class="tournament-container">
    <div class="container">
        <div class="row">
            <!-- Detalhes do Torneio -->
            <div class="col-lg-8">
                <div class="tournament-card">
                    <div class="card-header">
                        <h2>Detalhes do Torneio</h2>
                        @if (isAdmin)
                        {
                            <div class="admin-actions">
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-edit">
                                    <i class="fas fa-edit"></i> Editar
                                </a>
                            </div>
                        }
                    </div>
                    <div class="card-body">
                        <div class="tournament-description">
                            <h3>Descrição</h3>
                            <p>@Model.Description</p>
                        </div>

                        <div class="tournament-info-grid">
                            <div class="info-item">
                                <i class="fas fa-calendar-alt"></i>
                                <div>
                                    <h4>Datas</h4>
                                    <p>@Model.StartDate.ToString("MMM dd, yyyy") - @Model.EndDate.ToString("MMM dd, yyyy")</p>
                                </div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-clock"></i>
                                <div>
                                    <h4>Prazo de Inscrição</h4>
                                    <p>@Model.RegistrationDeadline.ToString("MMM dd, yyyy")</p>
                                </div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-trophy"></i>
                                <div>
                                    <h4>Prémio Total</h4>
                                    <p>@Model.PrizePool.ToString("C0")</p>
                                </div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-users"></i>
                                <div>
                                    <h4>Tamanho da Equipa</h4>
                                    <p>@Model.MinTeamSize-@Model.MaxTeamSize jogadores</p>
                                </div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-gamepad"></i>
                                <div>
                                    <h4>Jogo</h4>
                                    <p>@Model.Game.Name</p>
                                </div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-user-tie"></i>
                                <div>
                                    <h4>Organizador</h4>
                                    <p>@Model.Organizer.UserName</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Equipas Inscritas -->
                <div class="tournament-card mt-4">
                    <div class="card-header">
                        <h2>Equipas Inscritas (@Model.Registrations.Count/@Model.MaxTeams)</h2>
                    </div>
                    <div class="card-body">
                        @if (Model.Registrations.Any())
                        {
                            <div class="teams-grid">
                                @foreach (var registration in Model.Registrations)
                                {
                                    <div class="team-card">
                                        <div class="team-header">
                                            <h3>@registration.Team.Name</h3>
                                            <span class="members-count">@registration.Team.Members.Count membros</span>
                                        </div>
                                        <div class="team-members">
                                            @foreach (var member in registration.Team.Members.Take(3))
                                            {
                                                <img src="@member.User.Profile.AvatarUrl" alt="@member.User.UserName"
                                                     title="@member.User.UserName" class="member-avatar">
                                            }
                                            @if (registration.Team.Members.Count > 3)
                                            {
                                                <span class="more-members">+@(registration.Team.Members.Count - 3) mais</span>
                                            }
                                        </div>
                                        <div class="team-footer">
                                            <span>Inscrito em @registration.RegistrationDate.ToString("MMM dd")</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <i class="fas fa-users-slash"></i>
                                <p>Ainda não há equipas inscritas</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Painel de Inscrição -->
                @if (Model.StartDate > DateTime.Now)
                {
                    <div class="sidebar-card">
                        <h3>Inscrição</h3>

                        @if (isRegistered)
                        {
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle"></i> Já estás inscrito neste torneio
                            </div>
                            @if (userTeams.Any())
                            {
                                var registeredTeam = userTeams.FirstOrDefault(t => Model.Registrations.Any(r => r.TeamId == t.Id));
                                if (registeredTeam != null)
                                {
                                    <form id="unregisterForm" method="post"
                                          asp-controller="Tournaments" asp-action="Unregister"
                                          asp-route-tournamentId="@Model.Id"
                                          asp-route-teamId="@registeredTeam.Id">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-danger w-100 mt-2">
                                            <i class="fas fa-times"></i> Cancelar Inscrição (@registeredTeam.Name)
                                        </button>
                                    </form>
                                }
                            }
                        }
                        else if (User.Identity.IsAuthenticated)
                        {
                            if (userTeams.Any())
                            {
                                <form id="registerForm" method="post"
                                      asp-controller="Tournaments" asp-action="Register"
                                      asp-route-tournamentId="@Model.Id">
                                    <div class="form-group">
                                        <label>Selecionar Equipa</label>
                                        <select name="teamId" class="form-select" required>
                                            @foreach (var team in userTeams)
                                            {
                                                <option value="@team.Id">@team.Name (@team.Members.Count membros)</option>
                                            }
                                        </select>
                                    </div>
                                    <button type="submit" class="btn btn-register w-100">
                                        <i class="fas fa-user-plus"></i> Inscrever Equipa
                                    </button>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-warning">
                                    <p>Precisas de pertencer a uma equipa para te inscreveres</p>
                                    <a asp-controller="Teams" asp-action="Create" class="btn btn-sm btn-success">
                                        <i class="fas fa-plus"></i> Criar Equipa
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-info">
                                <p>Inicia sessão para te inscreveres neste torneio</p>
                                <a asp-controller="Auth" asp-action="Login" class="btn btn-sm btn-primary">
                                    <i class="fas fa-sign-in-alt"></i> Iniciar Sessão
                                </a>
                            </div>
                        }

                        <div class="registration-meta">
                            <div class="meta-item">
                                <i class="fas fa-users"></i>
                                <span>@Model.Registrations.Count/@Model.MaxTeams equipas inscritas</span>
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-clock"></i>
                                <span>Inscrições fecham @Model.RegistrationDeadline.ToString("MMM dd")</span>
                            </div>
                        </div>
                    </div>
                }

                <!-- Regras do Torneio -->
                <div class="sidebar-card">
                    <h3>Regras do Torneio</h3>
                    <ul class="rules-list">
                        <li>As equipas devem ter entre @Model.MinTeamSize e @Model.MaxTeamSize jogadores</li>
                        <li>Todos os jogos serão realizados nos servidores oficiais</li>
                        <li>Aplicam-se as regras competitivas padrão</li>
                        <li>Check-in obrigatório 30 minutos antes do jogo</li>
                        <li>Qualquer fraude resultará em desqualificação</li>
                    </ul>
                </div>

                <!-- Distribuição de Prémios -->
                @if (Model.PrizePool > 0)
                {
                    <div class="sidebar-card">
                        <h3>Distribuição de Prémios</h3>
                        <div class="prize-distribution">
                            <div class="prize-item">
                                <span class="position">1º Lugar</span>
                                <span class="prize-amount">@((Model.PrizePool * 0.5m).ToString("C0"))</span>
                            </div>
                            <div class="prize-item">
                                <span class="position">2º Lugar</span>
                                <span class="prize-amount">@((Model.PrizePool * 0.3m).ToString("C0"))</span>
                            </div>
                            <div class="prize-item">
                                <span class="position">3º Lugar</span>
                                <span class="prize-amount">@((Model.PrizePool * 0.2m).ToString("C0"))</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle registration form submission
            const registerForm = document.getElementById('registerForm');
            if (registerForm) {
                registerForm.addEventListener('submit', function(e) {
                    e.preventDefault();

                    // Show loading state
                    const submitBtn = registerForm.querySelector('button[type="submit"]');
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> A Inscrever...';

                    // Submit form
                    fetch(registerForm.action, {
                        method: 'POST',
                        body: new FormData(registerForm),
                        headers: {
                            'RequestVerificationToken': registerForm.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Inscrição falhada. Por favor, tenta novamente.');
                            submitBtn.disabled = false;
                            submitBtn.innerHTML = '<i class="fas fa-user-plus"></i> Inscrever Equipa';
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = '<i class="fas fa-user-plus"></i> Inscrever Equipa';
                    });
                });
            }
        });
    </script>
}

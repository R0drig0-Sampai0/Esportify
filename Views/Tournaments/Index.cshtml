@{
    ViewData["Title"] = "Tournaments";
}

<div class="container py-5">
    <div class="row mb-5">
        <div class="col-12 text-center">
            <h1 class="display-4">Current <span class="text-gradient">Tournaments</span></h1>
            <p class="lead">Join competitive tournaments and show your skills</p>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row mb-4">
        <div class="col-md-6 mb-3 mb-md-0">
            <div class="input-group">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <input type="text" class="form-control" id="tournamentSearch" placeholder="Search tournaments...">
            </div>
        </div>
        <div class="col-md-6">
            <select class="form-select" id="tournamentFilter">
                <option value="all">All Games</option>
                <option value="valorant">Valorant</option>
                <option value="lol">League of Legends</option>
                <option value="csgo">CS:GO</option>
                <option value="dota2">Dota 2</option>
            </select>
        </div>
    </div>

    <!-- Tournament Cards -->
    <div class="row" id="tournamentContainer">
        <!-- Tournament Card Template (will be populated from database) -->
        @for (int i = 0; i < 6; i++)
        {
            <div class="col-lg-4 col-md-6 mb-4 tournament-card" data-game="valorant">
                <div class="card h-100 tournament-card-inner">
                    <div class="tournament-image-container">
                        <img src="https://via.placeholder.com/400x225?text=Tournament+Banner" class="card-img-top" alt="Tournament banner">
                        <div class="tournament-badge">Valorant</div>
                        <div class="tournament-prize">$10,000</div>
                    </div>
                    <div class="card-body">
                        <h3 class="card-title">Weekly Valorant Challenge</h3>
                        <div class="tournament-details mb-3">
                            <div class="detail-item">
                                <i class="fas fa-calendar-alt me-2"></i>
                                <span>Jun 15-20, 2025</span>
                            </div>
                            <div class="detail-item">
                                <i class="fas fa-users me-2"></i>
                                <span>32/64 Teams</span>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="badge bg-primary">Open Registration</span>
                            <a href="#" class="btn btn-sm btn-outline-primary">View Details</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <nav aria-label="Tournament pagination" class="mt-5">
        <ul class="pagination justify-content-center">
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>

@section Styles {
    <style>
        .text-gradient {
            background: linear-gradient(to right, var(--bs-primary), var(--highlight));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .tournament-card-inner {
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.1);
            background: rgba(15, 25, 35, 0.9);
            border-radius: 8px;
            overflow: hidden;
        }

            .tournament-card-inner:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
                border-color: var(--bs-primary);
            }

        .tournament-image-container {
            position: relative;
            overflow: hidden;
        }

        .tournament-badge {
            position: absolute;
            top: 15px;
            left: 15px;
            background: var(--bs-primary);
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.8rem;
        }

        .tournament-prize {
            position: absolute;
            bottom: 15px;
            right: 15px;
            background: rgba(0, 0, 0, 0.7);
            color: var(--highlight);
            padding: 5px 15px;
            border-radius: 20px;
            font-weight: 600;
        }

        .card-title {
            color: var(--bs-primary);
            margin-bottom: 1rem;
        }

        .tournament-details {
            background: rgba(255, 255, 255, 0.05);
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 1rem;
        }

        .detail-item {
            margin-bottom: 5px;
            color: rgba(255, 255, 255, 0.7);
        }

        .page-item.active .page-link {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }

        .page-link {
            color: var(--bs-primary);
        }
    </style>
}

@section Scripts {
    <script>
        // Client-side filtering and searching
        document.addEventListener('DOMContentLoaded', function() {
            const tournamentSearch = document.getElementById('tournamentSearch');
            const tournamentFilter = document.getElementById('tournamentFilter');
            const tournamentCards = document.querySelectorAll('.tournament-card');

            // Search functionality
            tournamentSearch.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();

                tournamentCards.forEach(card => {
                    const title = card.querySelector('.card-title').textContent.toLowerCase();
                    const game = card.getAttribute('data-game');

                    if (title.includes(searchTerm)) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });

            // Filter functionality
            tournamentFilter.addEventListener('change', function() {
                const filterValue = this.value;

                tournamentCards.forEach(card => {
                    const game = card.getAttribute('data-game');

                    if (filterValue === 'all' || game === filterValue) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });

            // Simple animation when cards come into view
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = 1;
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.tournament-card-inner').forEach(card => {
                card.style.opacity = 0;
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'opacity 0.5s, transform 0.5s';
                observer.observe(card);
            });
        });
    </script>
}